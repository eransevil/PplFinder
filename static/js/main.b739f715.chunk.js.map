{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","hooks/usePeopleFetch.js","pages/Home/style.js","pages/Home/Home.js","pages/Favorites/style.js","pages/Favorites/Favorites.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","component","variant","Spinner","color","thickness","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","users","isLoading","favoriteList","toggleFavorite","loadMoreUsers","isFavPage","useState","hoveredUserId","setHoveredUserId","observe","useInView","onEnter","unobserve","then","res","handleMouseLeave","length","map","user","index","ref","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","name","title","first","last","email","location","street","number","city","country","onClick","includes","IconButton","usePeopleFetch","props","JSON","parse","localStorage","getItem","setUsers","setIsLoading","countryList","setCountryList","usersForDisplay","setUsersForDisplay","useEffect","setItem","stringify","fetchUsers","filterByCountry","filterdUsers","filter","nat","a","axios","get","response","data","results","updateCountryList","contry","countryListClone","idx","findIndex","contryItem","push","splice","cloneUsers","combinedArray","concat","Promise","resolve","Home","Content","Header","Favorites","FavUsers","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","setValue","AppBar","position","style","top","Tabs","_e","newValue","aria-label","indicatorColor","textColor","Tab","Link","to","AppRouter","setFavoriteList","userId","favoriteListClone","favoriteItem","exact","path","render","ReactDOM","document","querySelector"],"mappings":"qRAEaA,EAAOC,IAAOC,IAAV,oEACF,qBAAGC,QACD,qBAAGC,KAAmB,MAAQ,S,OCUhCJ,EAVF,SAAC,GAAuC,IAAD,IAApCG,YAAoC,MAA7B,OAA6B,EAArBE,EAAqB,EAArBA,SAAUD,EAAW,EAAXA,KACvC,OACE,cAACE,EAAA,EAAD,CAAaC,UAAW,OAAQC,QAAS,QAAzC,SACE,cAAC,EAAD,CAAQL,KAAMA,EAAMC,KAAMA,EAA1B,SACGC,O,SCCMI,EANC,SAAC,GAAyC,IAAvCN,EAAsC,EAAtCA,KAAMO,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,UAAWH,EAAc,EAAdA,QACzC,OACE,cAACI,EAAA,EAAD,CAAkBT,KAAMA,EAAMO,MAAOA,EAAOC,UAAWA,EAAWH,QAASA,K,kBCHlEK,EAAWZ,IAAOC,IAAV,0BCiBNW,EAdE,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAI9C,OACE,cAAC,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAUC,QAASP,EAAWC,SANxB,WACnBA,GAAYA,EAASE,IAK8CP,MAAM,YACrEM,MAAOA,O,0BCXFM,EAAWrB,IAAOC,IAAV,yEAKRqB,EAAOtB,IAAOC,IAAV,0LAUJsB,EAAOvB,IAAOC,IAAV,wFAMJuB,EAAWxB,IAAOC,IAAV,6KAURwB,EAAczB,IAAO0B,IAAV,mDAIXC,EAAiB3B,IAAOC,IAAV,0EAKd2B,EAAoB5B,IAAOC,IAAV,mIAGjB,qBAAG4B,UAA6B,EAAI,KAIpCC,EAAU9B,IAAOC,IAAV,uH,QCqCLoB,GA5EE,SAAC,GAA4F,IAA1FU,EAAyF,EAAzFA,MAAOC,EAAkF,EAAlFA,UAAWlB,EAAuE,EAAvEA,SAAUmB,EAA6D,EAA7DA,aAAcC,EAA+C,EAA/CA,eAAgBC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAC3F,EAA0CC,qBAA1C,mBAAOC,EAAP,KAAsBC,EAAtB,KAEQC,EAAYC,YAAU,CAE5BC,QAAS,YAA6B,IAA1BC,EAAyB,EAAzBA,UAAWH,EAAc,EAAdA,QAErBG,IACKR,GACLA,IAAgBS,MAAK,SAACC,GACpBL,UAPEA,QAgBFM,EAAmB,WACvBP,KAGF,OACE,eAAC,EAAD,YACIH,GAAa,eAAC,EAAD,WACb,cAAC,EAAD,CAAUpB,MAAM,KAAKD,MAAM,SAASD,SAAUA,IAC9C,cAAC,EAAD,CAAUE,MAAM,KAAKD,MAAM,YAAYD,SAAUA,IACjD,cAAC,EAAD,CAAUE,MAAM,KAAKD,MAAM,SAASD,SAAUA,IAC9C,cAAC,EAAD,CAAUE,MAAM,KAAKD,MAAM,UAAUD,SAAUA,IAC/C,cAAC,EAAD,CAAUE,MAAM,KAAKD,MAAM,UAAUD,SAAUA,OAGjD,eAAC,EAAD,WACGiB,EAAMgB,QAAUhB,EAAMiB,KAAI,SAACC,EAAMC,GAAW,IAAD,EAC1C,OAEE,eAAC,EAAD,CAAQC,IAAKD,IAAUnB,EAAMgB,OAAS,EAAIP,EAAU,KAElDY,aAAc,kBAxBD,SAACF,GACxBX,EAAiBW,GAuBaG,CAAiBH,IACrCI,aAAcR,EAHhB,UAKE,cAAC,EAAD,CAAeS,IAAG,OAAEN,QAAF,IAAEA,GAAF,UAAEA,EAAMO,eAAR,aAAE,EAAeC,MAAOC,IAAI,KAC9C,eAAC,EAAD,WACE,eAAC,EAAD,CAAMxD,KAAK,OAAOC,MAAI,EAAtB,iBACG8C,QADH,IACGA,OADH,EACGA,EAAMU,KAAKC,MADd,WACsBX,QADtB,IACsBA,OADtB,EACsBA,EAAMU,KAAKE,MADjC,WACyCZ,QADzC,IACyCA,OADzC,EACyCA,EAAMU,KAAKG,QAEpD,cAAC,EAAD,CAAM5D,KAAK,OAAX,gBAAmB+C,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAMc,QACzB,eAAC,EAAD,CAAM7D,KAAK,OAAX,iBACG+C,QADH,IACGA,OADH,EACGA,EAAMe,SAASC,OAAOC,OADzB,WACkCjB,QADlC,IACkCA,OADlC,EACkCA,EAAMe,SAASC,OAAON,QAExD,eAAC,EAAD,CAAMzD,KAAK,OAAX,iBACG+C,QADH,IACGA,OADH,EACGA,EAAMe,SAASG,KADlB,WACyBlB,QADzB,IACyBA,OADzB,EACyBA,EAAMe,SAASI,cAG1C,cAAC,EAAD,CAAqBC,QAAS,kBAAMnC,EAAee,EAAKc,QAAQlC,UAAWqB,IAAUZ,IAAV,OAA2BL,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAcqC,SAASrB,EAAKc,QAAlI,SACE,cAACQ,EAAA,EAAD,UACE,cAAC,IAAD,CAAc9D,MAAM,gBAnBnByC,OAyBTnB,EAAMgB,QAAUX,GAChB,cAAC,EAAD,CAAMlC,KAAK,OAAX,8CAED8B,GACC,cAAC,EAAD,UACE,cAAC,EAAD,CAASvB,MAAM,UAAUP,KAAK,OAAOQ,UAAW,EAAGH,QAAQ,2B,iDC3E1DiE,GAAiB,SAACC,GAC7B,MAA0BpC,mBAASqC,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,IAApF,mBAAO9C,EAAP,KAAc+C,EAAd,KACA,EAAkCzC,oBAAS,GAA3C,mBAAOL,EAAP,KAAkB+C,EAAlB,KACA,EAAsC1C,mBAAS,IAA/C,mBAAO2C,EAAP,KAAoBC,EAApB,KACA,EAA8C5C,mBAAS,IAAvD,mBAAO6C,EAAP,KAAwBC,EAAxB,KAEAC,qBAAU,WACRR,aAAaS,QAAQ,YAAaX,KAAKY,UAAUvD,MAChD,CAACA,IAEJqD,qBAAU,YAV6B,mCAWrCG,GACAC,MACC,CAACzD,IAGJqD,qBAAU,WACRI,MACC,CAACR,IAEJ,IAOMQ,EAAkB,WACtB,UAAIR,QAAJ,IAAIA,OAAJ,EAAIA,EAAajC,OAAQ,CACvB,IAAM0C,EAAe1D,EAAM2D,QAAO,SAACzC,GAAW,OAAO+B,EAAYV,SAASrB,EAAK0C,QAC/ER,EAAmBM,QAEnBN,EAAmBpD,IAhCgB,8CAmCvC,6BAAA6D,EAAA,0DACM7D,EAAMgB,OADZ,wDAEEgC,GAAa,GAFf,SAGyBc,KAAMC,IAAN,gDAHzB,OAGQC,EAHR,OAIEhB,GAAa,GACbD,EAASiB,EAASC,KAAKC,SALzB,4CAnCuC,sBAqDvC,MAAO,CAAElE,QAAOC,YAAWkD,kBAAiBgB,kBAjClB,SAACC,GACzB,IAAMC,EAAgB,YAAOpB,GACvBqB,EAAMD,EAAiBE,WAAU,SAAAC,GAAU,OAAIA,IAAeJ,MAC3D,IAATE,EAAaD,EAAiBI,KAAKL,GAAUC,EAAiBK,OAAOJ,EAAK,GAC1EpB,EAAemB,IA6B8CjE,cAV5C,yCAAG,iCAAAyD,EAAA,0DAChBZ,EAAYjC,OADI,iEAEG8C,KAAMC,IAAN,gDAFH,cAEdC,EAFc,OAGdW,EAHc,YAGG3E,GACjB4E,EAAgBD,EAAWE,OAAOb,EAASC,KAAKC,SACtDnB,EAAS6B,GALW,kBAObE,QAAQC,QAAQ,cAPH,2CAAH,uDC5CRC,GAAO/G,IAAOC,IAAV,+IAQJ+G,GAAUhH,IAAOC,IAAV,iKASPgH,GAASjH,IAAOC,IAAV,8CCIJ8G,IDAK/G,IAAOC,IAAV,4HCjBJ,SAAC,GAAsC,IAApCiC,EAAmC,EAAnCA,eAAgBD,EAAmB,EAAnBA,aAC9B,EAAyEuC,KAAjEU,EAAR,EAAQA,gBAAiBlD,EAAzB,EAAyBA,UAAWkE,EAApC,EAAoCA,kBAAmB/D,EAAvD,EAAuDA,cAEvD,OACE,cAAC,GAAD,UACE,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC,EAAD,CAAMjC,KAAK,OAAOC,MAAI,EAAtB,yBAIF,cAAC,GAAD,CAAU4B,MAAOmD,EAAiBlD,UAAWA,EAAWlB,SAAUoF,EAAmBhE,eAAgBA,EAAgBD,aAAcA,EAAcE,cAAeA,WCf3J4E,GAAO/G,IAAOC,IAAV,+IAQJ+G,GAAUhH,IAAOC,IAAV,iKASPgH,GAASjH,IAAOC,IAAV,8CCWJiH,IDPKlH,IAAOC,IAAV,4HCjBC,SAAC,GAAsC,IAApCiC,EAAmC,EAAnCA,eAAgBD,EAAmB,EAAnBA,aACjC,EAAgDuC,KAAxCzC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAAWkE,EAA1B,EAA0BA,kBAC1B,EAA8C7D,mBAAS,IAAvD,mBAAO6C,EAAP,KAAwBC,EAAxB,KAQA,OANAC,qBAAU,WACN,IAAM+B,EAAWpF,EAAM2D,QAAO,SAACzC,GAC3B,OAAOhB,EAAaqC,SAASrB,EAAKc,UAEtCoB,EAAmBgC,KACpB,CAAClF,IAEA,cAAC,GAAD,UACI,eAAC,GAAD,WACI,cAAC,GAAD,UACI,cAAC,EAAD,CAAM/B,KAAK,OAAOC,MAAI,EAAtB,+BAIJ,cAAC,GAAD,CAAU4B,MAAOmD,EAAiBlD,UAAWA,EAAWlB,SAAUoF,EAAmBhE,eAAgBA,EAAgBD,aAAcA,EAAcG,WAAW,W,6BCa7JgF,GAjCO,SAAC,GAAkB,IAAhBhH,EAAe,EAAfA,SACjBiH,EAAY,CAChBC,OAAQ,CACNC,KAAM,CACJC,gBAAiB,aAIjBC,EAAQC,IAAMC,SAClB,kBACEC,aAAe,CACbP,YACAQ,QAAS,CACPC,KAAM,OACNC,QAAS,CACPC,KAAM,WAERC,MAAO,CACLD,KAAM,gBAId,IAGF,OACE,eAAC,KAAD,CAAUP,MAAOA,EAAjB,UACE,cAACS,GAAA,EAAD,IACC9H,M,8BCEQ+H,GAzBA,WAEb,MAA0B9F,mBAAS,GAAnC,mBAAOrB,EAAP,KAAcoH,EAAd,KAMA,OACE,cAACC,GAAA,EAAD,CAAQC,SAAS,SAAS7H,MAAM,cAAc8H,MAAO,CAAED,SAAU,QAASE,IAAK,GAA/E,SACE,eAACC,GAAA,EAAD,CACEzH,MAAOA,EACPF,SARe,SAAC4H,EAAIC,GACxBP,EAASO,IAQLC,aAAW,aACXC,eAAe,UACfC,UAAU,UALZ,UAOI,cAACC,GAAA,EAAD,CAAKhI,MAAM,OAAOmC,MAAO,EAAI5C,UAAW0I,IAAMC,GAAG,MACjD,cAACF,GAAA,EAAD,CAAKhI,MAAM,YAAYmC,MAAO,EAAK5C,UAAW0I,IAAMC,GAAG,qBCQhE,IAKcC,OAjCG,WAEhB,MAAwC7G,mBAAS,IAAjD,mBAAOJ,EAAP,KAAqBkH,EAArB,KAEA/D,qBAAU,WACRR,aAAaS,QAAQ,eAAgBX,KAAKY,UAAUrD,GAAgB,OACnE,CAACA,IAEJ,IAAMC,EAAiB,SAACkH,GACtB,IAAMC,EAAiB,YAAOpH,GACxBoE,EAAMgD,EAAkB/C,WAAU,SAAAgD,GAAY,OAAIA,IAAiBF,MAChE,IAAT/C,EAAagD,EAAkB7C,KAAK4C,GAAUC,EAAkB5C,OAAOJ,EAAK,GAC5E8C,EAAgBE,IAGlB,OACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAChF,GAAD,OAAW,cAAC,GAAD,2BAAUA,GAAV,IAAiBvC,eAAgBA,EAAgBD,aAAcA,QACxG,cAAC,IAAD,CAAOsH,OAAK,EAACC,KAAK,aAAaC,OAAQ,SAAChF,GAAD,OAAW,cAAC,GAAD,2BAAeA,GAAf,IAAsBvC,eAAgBA,EAAgBD,aAAcA,iB,OCvBhIyH,IAASD,OAAO,cAAC,GAAD,IAAeE,SAASC,cAAc,Y","file":"static/js/main.b739f715.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography  component={'span'} variant={'body2'}>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const handleChange = () => {\r\n    onChange && onChange(value);\r\n  };\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\nimport useInView from \"react-cool-inview\";\r\n\r\n\r\nconst UserList = ({ users, isLoading, onChange, favoriteList, toggleFavorite, loadMoreUsers, isFavPage }) => {\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n\r\n  const { observe } = useInView({\r\n    // When the last item comes to the viewport\r\n    onEnter: ({ unobserve, observe }) => {\r\n      // Pause observe when loading data\r\n      unobserve();\r\n      if (!loadMoreUsers) return\r\n      loadMoreUsers().then((res) => {\r\n        observe();\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  return (\r\n    <S.UserList>\r\n      {!isFavPage && <S.Filters>\r\n        <CheckBox value=\"BR\" label=\"Brazil\" onChange={onChange} />\r\n        <CheckBox value=\"AU\" label=\"Australia\" onChange={onChange} />\r\n        <CheckBox value=\"CA\" label=\"Canada\" onChange={onChange} />\r\n        <CheckBox value=\"DE\" label=\"Germany\" onChange={onChange} />\r\n        <CheckBox value=\"DK\" label=\"Denmark\" onChange={onChange} />\r\n\r\n      </S.Filters>}\r\n      <S.List>\r\n        {users.length && users.map((user, index) => {\r\n          return (\r\n\r\n            <S.User ref={index === users.length - 1 ? observe : null}\r\n              key={index}\r\n              onMouseEnter={() => handleMouseEnter(index)}\r\n              onMouseLeave={handleMouseLeave}\r\n            >\r\n              <S.UserPicture src={user?.picture?.large} alt=\"\" />\r\n              <S.UserInfo>\r\n                <Text size=\"22px\" bold>\r\n                  {user?.name.title} {user?.name.first} {user?.name.last}\r\n                </Text>\r\n                <Text size=\"14px\">{user?.email}</Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.street.number} {user?.location.street.name}\r\n                </Text>\r\n                <Text size=\"14px\">\r\n                  {user?.location.city} {user?.location.country}\r\n                </Text>\r\n              </S.UserInfo>\r\n              <S.IconButtonWrapper onClick={() => toggleFavorite(user.email)} isVisible={index === hoveredUserId || favoriteList?.includes(user.email)}>\r\n                <IconButton>\r\n                  <FavoriteIcon color=\"error\" />\r\n                </IconButton>\r\n              </S.IconButtonWrapper>\r\n            </S.User>\r\n          );\r\n        })}\r\n        {!users.length && isFavPage &&\r\n          <Text size=\"38px\">You Dont Have Favorites User yet</Text>\r\n        }\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = (props) => {\r\n  const [users, setUsers] = useState(JSON.parse(localStorage.getItem('usersList')) || []);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [countryList, setCountryList] = useState([])\r\n  const [usersForDisplay, setUsersForDisplay] = useState([])\r\n\r\n  useEffect(() => { //SET users to local Storage\r\n    localStorage.setItem('usersList', JSON.stringify(users))\r\n  }, [users])\r\n\r\n  useEffect(() => {\r\n    fetchUsers()\r\n    filterByCountry(); //for the first time\r\n  }, [users])\r\n\r\n\r\n  useEffect(() => { //filter by contry every time the country list change\r\n    filterByCountry()\r\n  }, [countryList]);\r\n\r\n  const updateCountryList = (contry) => { //update the counrty list every time the user click on the checkbox\r\n    const countryListClone = [...countryList]\r\n    const idx = countryListClone.findIndex(contryItem => contryItem === contry)\r\n    idx === -1 ? countryListClone.push(contry) : countryListClone.splice(idx, 1)\r\n    setCountryList(countryListClone)\r\n  }\r\n\r\n  const filterByCountry = () => {\r\n    if (countryList?.length) {\r\n      const filterdUsers = users.filter((user) => { return countryList.includes(user.nat) })\r\n      setUsersForDisplay(filterdUsers)\r\n    } else {\r\n      setUsersForDisplay(users)\r\n    }\r\n  }\r\n  async function fetchUsers() {\r\n    if (users.length) return\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\r\n    setIsLoading(false);\r\n    setUsers(response.data.results);\r\n  }\r\n\r\n  const loadMoreUsers = async () => {\r\n    if (countryList.length) return\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\r\n    const cloneUsers = [...users]\r\n    const combinedArray = cloneUsers.concat(response.data.results);\r\n    setUsers(combinedArray)\r\n\r\n    return Promise.resolve('finish123')\r\n  }\r\n\r\n  return { users, isLoading, usersForDisplay, updateCountryList, loadMoreUsers };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = ({ toggleFavorite, favoriteList }) => {\r\n  const { usersForDisplay, isLoading, updateCountryList, loadMoreUsers } = usePeopleFetch();\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={usersForDisplay} isLoading={isLoading} onChange={updateCountryList} toggleFavorite={toggleFavorite} favoriteList={favoriteList} loadMoreUsers={loadMoreUsers} />\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Favorites = ({ toggleFavorite, favoriteList }) => {\r\n    const { users, isLoading, updateCountryList } = usePeopleFetch();\r\n    const [usersForDisplay, setUsersForDisplay] = useState([])\r\n\r\n    useEffect(() => {\r\n        const FavUsers = users.filter((user) => {\r\n            return favoriteList.includes(user.email)\r\n        })\r\n        setUsersForDisplay(FavUsers)\r\n    }, [favoriteList])\r\n    return (\r\n        <S.Home>\r\n            <S.Content>\r\n                <S.Header>\r\n                    <Text size=\"64px\" bold>\r\n                        Favorites Users\r\n                    </Text>\r\n                </S.Header>\r\n                <UserList users={usersForDisplay} isLoading={isLoading} onChange={updateCountryList} toggleFavorite={toggleFavorite} favoriteList={favoriteList} isFavPage={true} />\r\n            </S.Content>\r\n        </S.Home>\r\n    );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport {\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\n\r\nconst NavBar = () => {\r\n\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n          <Tab label=\"Home\" index={0}  component={Link} to=\"/\" />\r\n          <Tab label=\"Favorites\" index={1}   component={Link} to=\"/Favorites\"/>\r\n\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home, Favorites } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\n\r\nconst AppRouter = () => {\r\n\r\n  const [favoriteList, setFavoriteList] = useState([]);\r\n\r\n  useEffect(() => { //save to local storage\r\n    localStorage.setItem('favoriteList', JSON.stringify(favoriteList || []))\r\n  }, [favoriteList])\r\n\r\n  const toggleFavorite = (userId) => {\r\n    const favoriteListClone = [...favoriteList]\r\n    const idx = favoriteListClone.findIndex(favoriteItem => favoriteItem === userId)\r\n    idx === -1 ? favoriteListClone.push(userId) : favoriteListClone.splice(idx, 1)\r\n    setFavoriteList(favoriteListClone)\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" render={(props) => <Home {...props} toggleFavorite={toggleFavorite} favoriteList={favoriteList} />} />\r\n          <Route exact path=\"/Favorites\" render={(props) => <Favorites {...props} toggleFavorite={toggleFavorite} favoriteList={favoriteList} />} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\n<Route\r\n  path=\"/dashboard\"\r\n  render={(props) => <Dashboard {...props} authed={true} />}\r\n/>\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\nimport './App.css';\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}